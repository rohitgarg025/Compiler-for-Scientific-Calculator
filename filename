Grammar

    0 $accept: LINES $end

    1 LINES: LINES LINE
    2      | %empty

    3 LINE: EXPR '\n'
    4     | '\n'

    5 EXPR: EXPR '+' TERM
    6     | TERM

    7 TERM: TERM '*' FACTOR
    8     | FACTOR

    9 FACTOR: '(' EXPR ')'
   10       | NUM
   11       | '[' LIST ']'

   12 LIST: NUM EXTEND
   13     | '[' LIST ']' EXTEND

   14 EXTEND: LIST
   15       | %empty


Terminals, with rules where they appear

    $end (0) 0
    '\n' (10) 3 4
    '(' (40) 9
    ')' (41) 9
    '*' (42) 7
    '+' (43) 5
    '[' (91) 11 13
    ']' (93) 11 13
    error (256)
    NUM (258) 10 12


Nonterminals, with rules where they appear

    $accept (11)
        on left: 0
    LINES (12)
        on left: 1 2
        on right: 0 1
    LINE (13)
        on left: 3 4
        on right: 1
    EXPR (14)
        on left: 5 6
        on right: 3 5 9
    TERM (15)
        on left: 7 8
        on right: 5 6 7
    FACTOR (16)
        on left: 9 10 11
        on right: 7 8
    LIST (17)
        on left: 12 13
        on right: 11 13 14
    EXTEND (18)
        on left: 14 15
        on right: 12 13


State 0

    0 $accept: . LINES $end

    $default  reduce using rule 2 (LINES)

    LINES  go to state 1


State 1

    0 $accept: LINES . $end
    1 LINES: LINES . LINE

    $end  shift, and go to state 2
    NUM   shift, and go to state 3
    '\n'  shift, and go to state 4
    '('   shift, and go to state 5
    '['   shift, and go to state 6

    LINE    go to state 7
    EXPR    go to state 8
    TERM    go to state 9
    FACTOR  go to state 10


State 2

    0 $accept: LINES $end .

    $default  accept


State 3

   10 FACTOR: NUM .

    $default  reduce using rule 10 (FACTOR)


State 4

    4 LINE: '\n' .

    $default  reduce using rule 4 (LINE)


State 5

    9 FACTOR: '(' . EXPR ')'

    NUM  shift, and go to state 3
    '('  shift, and go to state 5
    '['  shift, and go to state 6

    EXPR    go to state 11
    TERM    go to state 9
    FACTOR  go to state 10


State 6

   11 FACTOR: '[' . LIST ']'

    NUM  shift, and go to state 12
    '['  shift, and go to state 13

    LIST  go to state 14


State 7

    1 LINES: LINES LINE .

    $default  reduce using rule 1 (LINES)


State 8

    3 LINE: EXPR . '\n'
    5 EXPR: EXPR . '+' TERM

    '\n'  shift, and go to state 15
    '+'   shift, and go to state 16


State 9

    6 EXPR: TERM .
    7 TERM: TERM . '*' FACTOR

    '*'  shift, and go to state 17

    $default  reduce using rule 6 (EXPR)


State 10

    8 TERM: FACTOR .

    $default  reduce using rule 8 (TERM)


State 11

    5 EXPR: EXPR . '+' TERM
    9 FACTOR: '(' EXPR . ')'

    '+'  shift, and go to state 16
    ')'  shift, and go to state 18


State 12

   12 LIST: NUM . EXTEND

    NUM  shift, and go to state 12
    '['  shift, and go to state 13

    $default  reduce using rule 15 (EXTEND)

    LIST    go to state 19
    EXTEND  go to state 20


State 13

   13 LIST: '[' . LIST ']' EXTEND

    NUM  shift, and go to state 12
    '['  shift, and go to state 13

    LIST  go to state 21


State 14

   11 FACTOR: '[' LIST . ']'

    ']'  shift, and go to state 22


State 15

    3 LINE: EXPR '\n' .

    $default  reduce using rule 3 (LINE)


State 16

    5 EXPR: EXPR '+' . TERM

    NUM  shift, and go to state 3
    '('  shift, and go to state 5
    '['  shift, and go to state 6

    TERM    go to state 23
    FACTOR  go to state 10


State 17

    7 TERM: TERM '*' . FACTOR

    NUM  shift, and go to state 3
    '('  shift, and go to state 5
    '['  shift, and go to state 6

    FACTOR  go to state 24


State 18

    9 FACTOR: '(' EXPR ')' .

    $default  reduce using rule 9 (FACTOR)


State 19

   14 EXTEND: LIST .

    $default  reduce using rule 14 (EXTEND)


State 20

   12 LIST: NUM EXTEND .

    $default  reduce using rule 12 (LIST)


State 21

   13 LIST: '[' LIST . ']' EXTEND

    ']'  shift, and go to state 25


State 22

   11 FACTOR: '[' LIST ']' .

    $default  reduce using rule 11 (FACTOR)


State 23

    5 EXPR: EXPR '+' TERM .
    7 TERM: TERM . '*' FACTOR

    '*'  shift, and go to state 17

    $default  reduce using rule 5 (EXPR)


State 24

    7 TERM: TERM '*' FACTOR .

    $default  reduce using rule 7 (TERM)


State 25

   13 LIST: '[' LIST ']' . EXTEND

    NUM  shift, and go to state 12
    '['  shift, and go to state 13

    $default  reduce using rule 15 (EXTEND)

    LIST    go to state 19
    EXTEND  go to state 26


State 26

   13 LIST: '[' LIST ']' EXTEND .

    $default  reduce using rule 13 (LIST)
